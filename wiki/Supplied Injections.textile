The purpose of the document is to explain what injections are made available by HandBones and what their rolls are.

h1. Table of Contents

# "**Any Where Any Time Injections**":#any
** "Models":#anymodels
** "Services":#anyservices
** "Utilities":#anyutilities
# "**Page Specific Injections**":#page
** "Views":#pageviews
** "Models":#pagemodels
** "Mappers":#pagemappers

h1(#any). Any Where Any Time Injections

These injections can be done anywhere you want at any time.

h2(#anymodels). Models

|_.Class|_.Description|
|"SettingsModel":http://github.com/Matan/HandBones/blob/master/src/org/handbones/model/SettingsModel.as|This is the parsed result of your "site.xml":http://wiki.github.com/Matan/HandBones/site-xml-layout. You probably won't need to use this model unless you defined a data node in your "site.xml":http://wiki.github.com/Matan/HandBones/site-xml-layout.|
|"NavigatorModel":http://github.com/Matan/HandBones/blob/master/src/org/handbones/model/NavigatorModel.as|Very simple model, keeps reference to the current page and the previous page. You'll use this when building your "page switching" view/mediator.|
|"SizeModel":http://github.com/Matan/HandBones/blob/master/src/org/handbones/model/SizeModel.as|The SizeModel keeps track of the stage dimensions and page dimensions. You use this everywhere your view components are dependent on the size of the stage and/or size of the page. You need to manually define the page size. In most cases the page size is dependent on the stage size. Simply map a command to listen to the <code>SizeEvent.RESIZE</code> and manually set what the page size should be. The SizeModel will then dispatch <code>SizeEvent.PAGE_RESIZE</code>.|

h2(#anyservices). Services

|_.Class|_.Description|
|"ISettingsService":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/ISettingsService.as|You can define where and what your "site.xml":http://wiki.github.com/Matan/HandBones/site-xml-layout is and called, so you must manually invoke the loading of the xml file by injecting this service and pass it the url to the file. This will kick off the HandBones internals.|
|"IAssetLoader":http://github.com/Matan/AssetLoader/blob/master/src/org/assetloader/core/IAssetLoader.as|Used for multi file loading through out HandBones. Please see "AssetLoader":http://github.com/Matan/AssetLoader on github.|

h2(#anyutilities). Utilities

|_.Class|_.Description|
|"IActionMap":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/IActionMap.as|Singleton instance of the ActionMap. You can manually map you actions via IActionMap, but if the view component is destroyed you HAVE to unmap it manually as well. There are localised implementations that automatically unmap their mappings, much like Robotlegs's EventMap. See the [[ActionMap]] wiki page.|
|"INavigotor":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/INavigator.as|Practically a wrapper for SWFAddress, here you can manually invoke urls, change the current page, etc. If you are using the ActionMap you don't need to inject this.|
|"ITracker":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/ITracker.as|Links to Google Analytics, here you can manually invoke tracking of anything you like. If you are using actions with tracking nodes, the tracking will be done automatically.|

h1(#page). Page Specific Injections

These injection will only be satisfied when a page is currently active. HandBones automatically maps and unmaps injection rules when pages startup and shutdown. This is way it's important that the page dispatches <code>PageEvent.STARTUP</code> and <code>PageEvent.SHUTDOWN_COMPLETE</code>.

h2(#pageviews). Views

|_.Class|_.Description|
|"IPage":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/IPage.as|This will give you reference to the current page's view component. In most cases you won't need to use this.| 

h2(#pagemodels). Models
 
|_.Class|_.Description|
|"IPageModel":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/IPageModel.as|At init phase each page defined in the "site.xml":http://wiki.github.com/Matan/HandBones/site-xml-layout is given it's very own model. This contains reference to parsed xml and their custom mapping instances.|

h2(#pagemappers). Mappers

Each of these basically wrap something else. The only difference is that they keep track of what has been map in this scope. This allows automatic unmapping when the page is destroyed.

|_.Class|_.Description|
|"IPageCommandMap":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/page/IPageCommandMap.as|Wraps the Robotlegs ICommandMap|
|"IPageInjector":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/page/IPageInjector.as|Wraps the Robotlegs IInjector|
|"IPageMediatorMap":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/page/IPageMediatorMap.as|Wraps the Robotlegs IMediatorMap|
|"IPageViewMap":http://github.com/Matan/HandBones/blob/master/src/org/handbones/core/page/IPageViewMap.as|Wraps the Robotlegs IViewMap|
|"IGroupLoader":http://github.com/Matan/AssetLoader/blob/master/src/org/assetloader/core/IGroupLoader.as|An instance of IGroupLoader is created for each page, this group loader handles all the assets to be loaded in this scope.|